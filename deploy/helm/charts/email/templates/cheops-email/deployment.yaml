{{- $nodeRole := .Values.global.env -}}
{{- if or ( eq .Values.global.env "dev" ) ( eq .Values.global.env "test") -}}
{{- $nodeRole = "stage" -}}
{{- end -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cheops-email
  name: cheops-email
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 1
  selector:
{{- if eq .Values.deploy_name "cpm" }}
{{- if eq .Values.global.env "prod" }}
    matchExpressions:
      - {key: app, operator: In, values: [cheops-email, laboratory]}
{{- else }}
    matchLabels:
      app: cheops-email
{{- end }}
{{- else }}
    matchLabels:
      app: cheops-email
{{- end}}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: cheops-email
    spec:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - matchExpressions:
             - key: node-role
               operator: In
               values: [ {{ $nodeRole }} ]
      containers:
        - name: cheops-email
          image: registry.sirius.online/cheops-edu/cheops-email/cheops-email:{{ .Values.global.tag }}
          imagePullPolicy: IfNotPresent
          env:
           - name: GHCRTS
             value: {{ .Values.email.rtsConfig | quote }}
           - name: DB_POOL_PG_CONFIG
             value: {{ .Values.email.db.main.uri | b64dec }}
           - name: DB_POOL_STRIPES
             value: {{ .Values.email.db.main.poolStripes | quote }}
           - name: DB_POOL_IDLE_TIME
             value: {{ .Values.email.db.main.poolIdleTime | quote }}
           - name: DB_POOL_RESOURCE_PER_STRIPE
             value: {{ .Values.email.db.main.poolResourcePerStripe | quote }}
           - name: EMAIL_SERVER_PORT
             value: {{ .Values.email.server.port | quote }}
           - name: SMTP_SERVER
             value: {{ .Values.email.smtp.server | quote }}
           - name: SMTP_USER_NAME
             value: {{ .Values.email.smtp.userName | quote }}
           - name: SMTP_USER_EMAIL
             value: {{ .Values.email.smtp.userEmail | quote }}
           - name: SMTP_USER_PASSWORD
             value: {{ .Values.email.smtp.password | quote }}
           - name: EMAIL_RETRY_TIMEOUT
             value: "5000000"
           - name: EMAIL_RETRY_TIMEOUT_ON_ERROR
             value: "15000000"
      lifecycle:
        preStop:
          httpGet:
           path: /stop
           port: 10030
      livenessProbe:
        preStop:
          httpGet:
           path: /health
           port: 10030
        failureThreshold: 5
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      readinessProbe:
        preStop:
          httpGet:
           path: /ready
           port: 10030
        failureThreshold: 5
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      ports:
        - containerPort: {{ .Values.email.server.port }}
          protocol: TCP
      resources:
        requests:
          memory: {{ .Values.email.resources.requests.memory | quote }}
          cpu: {{ .Values.email.resources.requests.cpu | quote }}
      tolerations:
      - effect: NoSchedule
        key: node-role
        operator: Equal
        value: {{ $nodeRole }}
      - effect: NoSchedule
        key: app
        operator: Equal
        value: laboratory
      imagePullSecrets:
        - name: ndc-mjxwh
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30

